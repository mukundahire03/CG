
6 Implement the following polygon filling methods Boundary fill using mouse click, keyboard interface and menu driven programming


#include<iostream>
#include<GL/glut.h>
#include<math.h>
int option =1;
using namespace std;
struct Point{
  GLint x;
  GLint y;
};
struct Color{
  GLfloat r;
  GLfloat g;
  GLfloat b;
};
void init(){
  glClearColor(0.0,0.0,0.0,0.0);
  glColor3f(1.0,1.0,1.0);
  glPointSize(1.0);
  glMatrixMode(GL_PROJECTION);
  glLoadIdentity();
  gluOrtho2D(0.0,500.0,0.0,500.0);
}
Color getPixelColor(GLint x,GLint y)
{
  Color color;
  glReadPixels(x,y,1,1,GL_RGB,GL_FLOAT,&color);
  return color;
}
void setPixelColor(GLint x,GLint y,Color color)
{
  glColor3f(color.r,color.g,color.b);
  glBegin(GL_POINTS);
  glVertex2i(x,y);
  glEnd();
  glFlush();
}
void flood(GLint x,GLint y,Color old_col,Color new_col)
{
  Color color;
  color = getPixelColor(x,y);
  if(color.r == old_col.r && color.g == old_col.g && color.b == old_col.b)
  {
    setPixelColor(x,y,new_col);
    flood(x+1,y,old_col,new_col);
    flood(x-1,y,old_col,new_col);
    flood(x,y+1,old_col,new_col);
    flood(x,y-1,old_col,new_col);
  }
  return;
}
void bound_it(GLint x,GLint y,Color fcolor,Color bcolor)
{
  Color color;
  color = getPixelColor(x,y);
  if((color.r != fcolor.r || color.g != fcolor.g || color.b != fcolor.b)&&(color.r != bcolor.r || color.g != bcolor.g ||color.b != bcolor.b))
  {
    setPixelColor(x,y,fcolor);
    bound_it(x+1,y,fcolor,bcolor);
    bound_it(x-1,y,fcolor,bcolor);
    bound_it(x,y+1,fcolor,bcolor);
    bound_it(x,y-1,fcolor,bcolor);
  }
  return;
}
void mouse(int btn,int state,int x,int y){
  Color new_col ={0.0f,1.0f,0.0f};
  Color old_col ={0.0f,0.0f,0.0f};
  Color bcolor ={1.0f,1.0f,1.0f};
  Color fcolor = {0.0f,0.0f,1.0f};
  
  if(option == 1){
    flood(x,500-y,old_col,new_col);
  }
  else{
    bound_it(x,500-y,fcolor,bcolor);
  }
}
void  display(){
  glClear(GL_COLOR_BUFFER_BIT);
  glBegin(GL_LINE_LOOP);
  glVertex2i(250,250);
  glVertex2i(250,300);
  glVertex2i(300,300);
  glVertex2i(300,250);
  glEnd();
  glFlush();
}
int main(int argc,char **argv)
{
  cout<<"1.Flood fill"<<endl;
  cout<<"2. Boundary fill"<<endl;
  cout<<"option";
  cin>>option;
  glutInit(&argc,argv);
  glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
  glutInitWindowSize(500,500);
  glutInitWindowPosition(0,0);
  glutCreateWindow("flood");
  init();
  glutDisplayFunc(display);
  glutMouseFunc(mouse);
  glutMainLoop();
  return 0;
}
